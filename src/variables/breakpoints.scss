/*
 * 1.0 - Breakpoints
 * @include for-small-device-only { background: purple; }
 * Large [lg]: 1250- 1251+
 * Medium [md]: 768- 769+
 * Small [sm]: 500-
 */

$breakpoints: (
        sm: (only:500px),
        md: (only: 768px, up: 769px),
        lg: (only: 1250px, up: 1251px)
);

@mixin sm-only {
  @media (max-width: map-deep-get($breakpoints, sm, only)) {
    @content;
  }
}

@mixin md-only {
  @media (max-width: map-deep-get($breakpoints, md, only)) {
    @content;
  }
}

@mixin md-up {
  @media (min-width: map-deep-get($breakpoints, md, up)) {
    @content
  }
}

@mixin lg-only {
  @media (max-width: map-deep-get($breakpoints, lg, only)) {
    @content;
  }
}

@mixin lg-up {
  @media (min-width: map-deep-get($breakpoints, lg, up)) {
    @content;
  }
}

// The orientation feature is specified as a keyword value chosen from the list below.
// @portrait: The device is in a portrait orientation, i.e.,  the height is greater than or equal to the width.
// @landscape: The device is in a landscape orientation, i.e., the width is greater than the height.

// Orientation landscape
@mixin landscape {
  @media (orientation: landscape) {
    @content;
  }
}

@mixin sm-only-landscape {
  @media (max-width: map-deep-get($breakpoints, sm, only)) and (orientation: landscape) {
    @content;
  }
}

@mixin md-only-landscape {
  @media (max-width: map-deep-get($breakpoints, md, only)) and (orientation: landscape) {
    @content;
  }
}

@mixin lg-only-landscape {
  @media (max-width: map-deep-get($breakpoints, lg, only)) and (orientation: landscape) {
    @content;
  }
}

// Orientation portrait
@mixin portrait {
  @media (orientation: portrait) {
    @content;
  }
}

@mixin sm-only-portrait {
  @media (max-width: map-deep-get($breakpoints, sm, only)) and (orientation: portrait) {
    @content;
  }
}

@mixin md-only-portrait {
  @media (max-width: map-deep-get($breakpoints, md, only)) and (orientation: portrait) {
    @content;
  }
}

@mixin lg-only-portrait {
  @media (max-width: map-deep-get($breakpoints, lg, only)) and (orientation: portrait) {
    @content;
  }
}